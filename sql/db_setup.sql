/*
Notes: 
- Flat_ID may need to be generated by javascript on inserts
*/

-- Instances represent a user (flatmate)
create table User (
    User_ID varchar(30),
    Email varchar(30) not null unique,
    Username varchar(30) not null unique,
    Password varchar(15) not null,
    Flat_ID varchar(10),
    constraint User_PK primary key (User_ID),
    constraint Flat_FK foreign key (Flat_ID)
        references (Flat.Flat_ID)
);

-- Instances represent a flat shared between Users
create table Flat (
    Flat_ID varchar(10) not null unique,
    Address varchar(50),
    constraint Flat_PK primary key (Flat_ID)
);

-- Instances represent an Event happening at some point in time
-- A flat can have multiple events, an event must be associated with a flat
create table Event (
    Event_ID int not null unique auto_increment,
    Flat_ID varchar(10) not null,
    Title varchar(40),
    Description varchar(150),
    Event_Date date,
    Start_Time time,
    End_Time time,
    constraint Event_PK primary key (Event_ID, Flat_ID),
    constraint Flat_FK foreign key (Flat_ID)
        references (Flat.Flat_ID)
);

-- Instances represnt a flat bill / expense
-- A flat can have multiple bills, a bill must be associated with a flat
create table Bills (
    Bill_ID int not null unique auto_increment,
    Flat_ID varchar(10) not null,
    Amount decimal(7, 2),
    Description varchar(150),
    constraint Bills_PK primary key (Flat_ID, Bill_ID),
    constraint Flat_FK foreign key (Flat_ID)
        references (Flat.Flat_ID),
    constraint Amount_CHK check (Amount >= 0)
);

-- Instances represent grocery items for grocery list 
-- A flat can have multiple groceries, a grocery item must be associated with a flat
create table Groceries (
    Flat_ID varchar(10) not null,
    Item varchar(30) unique not null,
    Price decimal(7, 2),
    Quantity int,
    constraint Grocery_PK primary key (Flat_ID, Item),
    constraint Flat_FK foreign key (Flat_ID)
        references (Flat.Flat_ID),
    constraint Price_Quantity_CHK check (Quantity > 0 and Price > 0)
);

-- Instances represent jobs / chores to do for chore list
-- A Flat can have multiple chores, a chore must be associated with a flat
create table Chores (
    Flat_ID varchar(10) not null,
    Chore_ID int not null unique auto_increment,
    Priority varchar(30),
    Title varchar(30),
    Description varchar(150),
    constraint Chore_PK primary key (Flat_ID, Chore_ID),
    constraint Flat_FK foreign key (Flat_ID)
        references (Flat.Flat_ID)
);

-- Table represents relationship between Users and Chores
-- A user can have multiple chores and chores can have multiple users
create table Chore_Assignment (
    User_ID varchar(30) not null,
    Chore_ID int not null,
    constraint Chore_Assignment_PK primary key (User_ID, Chore_ID),
    constraint User_FK foreign key (User_ID)
        references (User.Email),
    constraint Chore_FK foreign key (Chore_ID)
        references (Chores.Chore_ID)
);

-- Table represents relationship between Users and Events
-- A user can have multiple events and an event can have multiple users
create table Users_Events (
    User_ID varchar(30) not null,
    Event_ID int not null,
    constraint Users_Events_PK primary key (User_ID, Event_ID),
    constraint User_FK foreign key (User_ID)
        references (User.Email),
    constraint Event_FK foreign key (Event_ID)
        references (Event.Event_ID)
);

