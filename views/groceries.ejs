<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Groceries</title>
    <link rel="stylesheet" href="/groceries.css">
    <link rel="stylesheet" href="nav.css">
</head>

<body>
    <%- include('navbar') %>

        <div class="container">
            <h1>Groceries</h1>

            <div class="checklist-container">
                <table class="table">
                    <thead>
                        <tr class="table-header">
                            <th id="checkbox">âœ”</th>
                            <th id="item">Item</th>
                            <th id="qty">Quantity</th>
                            <th id="price">Price</th>
                        </tr>
                    </thead>
                    <tbody id="checklist">
                        <% groceries.forEach(grocery=> { %>
                            <tr>
                                <td><input type="checkbox" name="checkedItems"
                                        value='["<%= grocery.Flat_ID %>", "<%= grocery.Item %>"]' <% if
                                        (grocery.Checked_State) { %> checked <% } %>
                                        onchange="updateStatus('<%= grocery.Flat_ID %>', '<%= grocery.Item %>',
                                                this.checked)">
                                </td>
                                <td>
                                    <%= grocery.Item %>
                                </td>
                                <td>
                                    <input type="number" name="quantity" value="<%= grocery.Quantity %>" min="1"
                                        onchange="updateQuantity('<%= grocery.Flat_ID %>', '<%= grocery.Item %>', this.value)">
                                </td>
                                <td>$<%= parseFloat(grocery.Price).toFixed(2) %>
                                </td>
                            </tr>
                            <% }) %>
                    </tbody>
                </table>

            </div>
            <div class="estimated-cost">
                <h3>Estimated Total:</h3>
                <p id="totalCost">$0.00</p>
            </div>
            <div class="buttons">
                <form action="/groceries/add" method="POST" class="add-form">
                    <input type="text" name="item" id="itemInput" placeholder="Item" required>
                    <p id="itemWarning" style="color: red; font-size: 0.9rem; display: none;">Item already exists!</p>

                    <div class="price-quantity-row">
                        <input type="number" name="price" step="0.01" min="0.01" placeholder="Price" required>
                        <input type="number" name="quantity" min="1" placeholder="Quantity" required>
                    </div>
                    <button type="submit">Add item</button>
                </form>

                <div class="buttons-bottom">
                    <form action="/groceries/clear-checked" method="POST">
                        <button id="clear-checked" type="submit">Clear checked</button>
                    </form>

                    <form action="/groceries/clear-all" method="POST">
                        <button id="clear-all" type="submit">Clear all</button>
                    </form>
                </div>
            </div>
        </div>
        <script>

            // Prevent adding duplicate item
            const existingItems = <%- JSON.stringify(groceries.map(g => g.Item.toLowerCase())) %>;
            const itemInput = document.getElementById("itemInput");
            const warningMessage = document.getElementById("itemWarning");

            const addForm = document.querySelector(".add-form");
            addForm.addEventListener("submit", (e) => {
                const enteredItem = itemInput.value.trim().toLowerCase();
                if (existingItems.includes(enteredItem)) {
                    e.preventDefault();
                    warningMessage.style.display = "block";
                }else {
                    warningMessage.style.display = "none";
                }
            });

            // Calculate the total
            function calculateTotal() {
                let total = 0;
                const rows = document.querySelectorAll("#checklist tr");

                rows.forEach(row => {
                    const quantityInput = row.children[2].querySelector('input'); // Get the input field for quantity
                    const priceCell = row.children[3];

                    if (quantityInput && priceCell) {
                        const quantity = parseInt(quantityInput.value, 10); // Get the value from the input field
                        const priceText = priceCell.textContent.trim().replace("$", "");
                        const price = parseFloat(priceText);

                        if (!isNaN(quantity) && !isNaN(price)) {
                            total += quantity * price;
                        }
                    }
                });

                document.getElementById("totalCost").textContent = `$${total.toFixed(2)}`;
            }

            // update item quantity
            function updateQuantity(flatId, item, quantity) {
                const xhr = new XMLHttpRequest();
                xhr.open("POST", "/groceries/update-quantity", true);
                xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        console.log("Quantity updated successfully");
                        calculateTotal();
                    } else {
                        console.log("Error updating quantity");
                    }
                };
                xhr.send("flatId=" + flatId + "&item=" + item + "&quantity=" + quantity);
            }

            document.querySelectorAll("input[name='quantity']").forEach(input => {
                input.addEventListener("input", function () {
                    calculateTotal();
                });
            });

            window.addEventListener("DOMContentLoaded", calculateTotal);

            // update checkbox status
            function updateStatus(flatId, item, checked) {
                const xhr = new XMLHttpRequest();
                xhr.open("POST", "/groceries/update-status", true);
                xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                xhr.onload = function () {
                    if (xhr.status === 200) {
                        console.log("Item status updated successfully");
                    } else {
                        console.log("Error updating item status");
                    }
                };
                xhr.send("flatId=" + flatId + "&item=" + item + "&checked=" + (checked ? 1 : 0));
            }

            //clear checked items
            document.getElementById("clear-checked").addEventListener("click", (event) => {
                event.preventDefault();

                fetch("/groceries/clear-checked", { method: "POST" })
                    .then(response => {
                        if (response.ok) {
                            location.reload();
                        } else {
                            console.error("Failed to clear checked items");
                        }
                    })
                    .catch(error => console.error("Error:", error));
            });

        </script>

</body>

</html>